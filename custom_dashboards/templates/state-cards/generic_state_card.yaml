################################################################################
# Generic State Card                                                           #
#                                                                              #
# @Author Eduardo Hiratuka <edu.hiratuka@gmail.com>                            #
# @Version 1.0                                                                 #
#                                                                              #
################################################################################

generic_state_card:
    template:
        - icon_component_part
        - primary_info_component_part
        - secondary_info_component_part
        - notification_component_part

    variables:
        entity: "sun.sun"
        controllers: []

    entity: "[[[ return variables.entity ]]]"

    styles:
        card:
            # Layout Styles
            - padding: 12px

            - pointer-events: all
            - cursor: pointer

        grid:
            # Grid Styles
            - grid-template: |
                [[[
                    if(variables.controllers.length > 0) {
                        return "'i n' auto 'i s' min-content 'controller-container controller-container' min-content / min-content auto";    
                    }
                    return "'i n' auto 'i s' min-content / min-content auto";
                ]]]

        img_cell:
            # Layout Styles
            - margin-right: 12px

        name:
            # Layout Styles
            - padding-top: 2px
            - place-self: initial

            # Text Styles
            - text-align: initial

        state:
            # Layout Styles
            - padding-bottom: 2px
            - place-self: initial

            # Text Styles
            - text-align: initial

    extra_styles: |
        [[[
            let display = variables.controllers.length > 0 ? 'block' : 'none';
            
            return `#container #controller-container {
                display: ${ display }
            }`;
        ]]]
    custom_fields:
        controller-container:
            card:
                type: custom:button-card
                styles:
                    card:
                        - margin-top: 12px
                        - padding: 0
                        - border: 0
                        - height: 40px
                    grid:
                        - height: 40px
                        - grid-template-areas: none
                        - grid-template-rows: none
                        - grid-template-columns: none
                        - grid-auto-flow: column
                        - column-gap: 12px
                extra_styles: |
                    #container > * {
                        grid-area: auto !important;
                    }
                custom_fields: |
                    [[[
                        if(variables.controllers.length > 0) {
                            let arrayToMap = {};

                            for (let i = 0; i < variables.controllers.length; i++) {
                                let controller = variables.controllers[i];
                                controller.entity = variables.entity;

                                let template = controller.type + '_controller_component'
                                arrayToMap['a' + i] = {
                                    card: {
                                        type: 'custom:button-card',
                                        template: template,
                                        variables: controller
                                    }
                                };
                            }
                        
                            return arrayToMap;
                        }
                        return "";
                    ]]]

