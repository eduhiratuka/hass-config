4ch_cameras_dashboard:
  variables:
    server_entity: null
    highlighted_camera: null
    channel1: null
    channel2: null
    channel3: null
    channel4: null
  triggers_update: 
    - '[[[ return variables.highlighted_camera ]]]'
    - '[[[ return variables.server_entity ]]]'
  styles:
    card:
      - padding: 0px
      - height: 100%
      - border: 0
      - justify-content: center
      - background-color: transparent
    grid:
      - padding: 12px
      - grid-gap: 6px 6px
      - align-items: stretch
      - align-content: center
      - justify-items: stretch
      - justify-content: center
  extra_styles: >
    [[[
        
        const highlighted_camera_entity = variables.highlighted_camera;
        const highlighted_camera_state = states[highlighted_camera_entity];
        const current_camera = highlighted_camera_state.state;
        const all_cameras = highlighted_camera_state.attributes.options;

        var pos = ['cam1', 'cam2', 'cam3', 'cam4'];

        if (current_camera == all_cameras[1]) {
            pos = ['cam2', 'cam1', 'cam3', 'cam4'];
        } else if (current_camera == all_cameras[2]) {
            pos = ['cam3', 'cam1', 'cam2', 'cam4'];
        } else if (current_camera == all_cameras[3]) {
            pos = ['cam4', 'cam1', 'cam2', 'cam3'];
        }

        var styles = 
          `ha-card>#container>*>button-card {
              height: 100%;
              justify-content: center;
          }
          ha-card #container.vertical.no-icon.no-name.no-label {
              grid-template-areas: "title title" "${pos[0]} ${pos[1]}" "${pos[0]} ${pos[2]}" "${pos[0]} ${pos[3]}";
              grid-template-columns: 70% 30%;
              grid-template-rows: 10% 30% 30% 30%;
              height: calc(100vh - 12px - 24px - 56px - 18px);
              width: calc(100% - 24px - 6px);
          }
          @media screen and (max-width: 870px) {
              ha-card #container.vertical.no-icon.no-name.no-label {
                  grid-template-areas: "title title title" "${pos[0]} ${pos[0]} ${pos[0]}" "${pos[1]} ${pos[2]} ${pos[3]}";
                  grid-template-columns: 33% 33% 33%;
                  grid-template-rows: 10% 60% 30%;
                  height: calc(100vh - 12px - 24px - 56px - 12px);
                  width: calc(100% - 24px - 12px);
              }
          }
          @media screen and (max-width: 450px) {
              ha-card #container.vertical.no-icon.no-name.no-label {
                  grid-template-areas: "${pos[0]} ${pos[0]}" "${pos[1]} ${pos[2]}" "${pos[3]} .";
                  grid-template-columns: 50% 50%;
                  grid-template-rows: 70% 15% 15%;
                  height: calc(100vh - 12px - 24px - 56px - 18px);
                  width: calc(100% - 24px - 6px);
              }

              ha-card>#container>#title {
                display: none;
              }
          }`;

          return styles;
    ]]]



  custom_fields:
    title:
      card:  
        type: 'custom:button-card'
        template: dashboard_title_template
        variables:
          title: 'Câmeras de Vigilância'
          subtitle: '[[[ return states[variables.server_entity]["state"] ]]]'
    cam1:
      card:
        type: 'custom:button-card'
        template: webrtc_camera_template
        variables:
          camera_url: '[[[ return variables.channel1.camera_url ]]]'
          camera_name: '[[[ return variables.channel1.camera_name ]]]'
          highlighted_camera: '[[[ return variables.highlighted_camera ]]]'
          shortcuts: >
            [[[ 
              const destacar = [{
                name: "Destacar",
                icon: "mdi:resize",
                service: "select.select_option",
                service_data: {
                  entity_id: variables.highlighted_camera,
                  option: variables.channel1.camera_name
                }
              }];

              if (variables.channel1.shortcuts !== undefined)
                return destacar.concat(variables.channel1.shortcuts);
              return destacar;
            ]]]
    cam2:
      card:
        type: 'custom:button-card'
        template: webrtc_camera_template
        variables:
          camera_url: '[[[ return variables.channel2.camera_url ]]]'
          camera_name: '[[[ return variables.channel2.camera_name ]]]'
          highlighted_camera: '[[[ return variables.highlighted_camera ]]]'
          shortcuts: >
            [[[ 
              const destacar = [{
                name: "Destacar",
                icon: "mdi:resize",
                service: "select.select_option",
                service_data: {
                  entity_id: variables.highlighted_camera,
                  option: variables.channel2.camera_name
                }
              }];

              if (variables.channel2.shortcuts !== undefined)
                return destacar.concat(variables.channel2.shortcuts);
              return destacar;
            ]]]
    cam3:
      card:
        type: 'custom:button-card'
        template: webrtc_camera_template
        variables:
          camera_url: '[[[ return variables.channel3.camera_url ]]]'
          camera_name: '[[[ return variables.channel3.camera_name ]]]'
          highlighted_camera: '[[[ return variables.highlighted_camera ]]]'
          shortcuts: >
            [[[ 
              const destacar = [{
                name: "Destacar",
                icon: "mdi:resize",
                service: "select.select_option",
                service_data: {
                  entity_id: variables.highlighted_camera,
                  option: variables.channel3.camera_name
                }
              }];

              if (variables.channel3.shortcuts !== undefined)
                return destacar.concat(variables.channel3.shortcuts);
              return destacar;
            ]]]
    cam4:
      card:
        type: 'custom:button-card'
        template: webrtc_camera_template
        variables:
          camera_url: '[[[ return variables.channel4.camera_url ]]]'
          camera_name: '[[[ return variables.channel4.camera_name ]]]'
          highlighted_camera: '[[[ return variables.highlighted_camera ]]]'
          shortcuts: >
            [[[ 
              const destacar = [{
                name: "Destacar",
                icon: "mdi:resize",
                service: "select.select_option",
                service_data: {
                  entity_id: variables.highlighted_camera,
                  option: variables.channel4.camera_name
                }
              }];

              if (variables.channel4.shortcuts !== undefined)
                return destacar.concat(variables.channel4.shortcuts);
              return destacar;
            ]]]